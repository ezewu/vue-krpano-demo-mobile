<krpano>

    <contextmenu fullscreen="false" versioninfo="false"/>

    <style name="new_spotd11_gif" 
        url="http://krpano.deyou360.com/new_spotd11_gif.png" 
        scale="0.7"
        edge="top"
        distorted="true"
        onover="tween(scale,0.55);"
        onout="tween(scale,0.5);"
        onloaded="do_crop_animation(100, 100, 30);hotspot_tip();"
        onclick="skin_hotspotstyle_click();"
    />


    <style name="new_spotd07_gif" 
        url="http://krpano.deyou360.com/new_spotd07_gif.png"
        scale="0.7"
        edge="top"
        distorted="true"
        onover="tween(scale,0.55);"
        onout="tween(scale,0.5);"
        onloaded="do_crop_animation(100, 100, 30);hotspot_tip();"
        onclick="skin_hotspotstyle_click();"
    />


    <style name="new_static_hotspot" 
        scale="0.4"
        url="http://krpano.deyou360.com/tip.png"
        edge="top"
        distorted="true"
        onover="tween(scale,0.55);"
        onout="tween(scale,0.5);"
        onloaded="hotspot_tip_static();"
    />
    
    <action name="hotspot_tip_static">
        txtadd(tooltipname, 'vrtooltip_', get(name));
        addhotspot(get(tooltipname)); 
        set(hotspot[get(tooltipname)].type,text);
        copy(hotspot[get(tooltipname)].edge,hotspot[get(name)].edge);
        copy(hotspot[get(tooltipname)].distorted,hotspot[get(name)].distorted);
        copy(hotspot[get(tooltipname)].ath,hotspot[get(name)].ath);
        copy(hotspot[get(tooltipname)].atv,hotspot[get(name)].atv);
        set(hotspot[get(tooltipname)].oy,-30);
        set(hotspot[get(tooltipname)].ox,0);
        set(hotspot[get(tooltipname)].vcenter,true);
        set(hotspot[get(tooltipname)].padding,3);
        set(hotspot[get(tooltipname)].bg,true);
        set(hotspot[get(tooltipname)].bgcolor,0x000000);
        set(hotspot[get(tooltipname)].bgroundedge,5);
        set(hotspot[get(tooltipname)].bgalpha,0.65);
        set(hotspot[get(tooltipname)].bgborder,0);
        set(hotspot[get(tooltipname)].bgshadow,'0 0 0 0x000000 0');
        set(hotspot[get(tooltipname)].css,'text-align:left;font-weight:100; color:#FFFFFF; font-family:MicrosoftYahei; font-size:14px;');
        if(device.mobile,set(hotspot[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:MicrosoftYahei; font-weight:100; font-size:14px;');
        );
        set(hotspot[get(tooltipname)].txtshadow,'0 0 0 0x000000 0');
        if(text == '' OR text === null,
            copy(hotspot[get(tooltipname)].html,scene[get(linkedscene)].title),
            copy(hotspot[get(tooltipname)].html,text);
        ); 
        set(hotspot[get(tooltipname)].enabled,false); 
        if(lp_running == false,
            set(hotspot[get(tooltipname)].visible,true); 
            , 	
            if(!webvr.isenabled,
            if(lp_running == true,
                set(hotspot[get(tooltipname)].visible,false); 
                set(hotspot[get(tooltipname)].mark2,true);
            );
            );
            );
        if(hotspot[get(name)].normal == false, 
            set(hotspot[get(tooltipname)].normal,false);
            set(hotspot[get(tooltipname)].onloaded,
                if(webvr.isenabled,
                    set(visible,false);
                    ,	
                    if(lp_running == false OR lp_running == null,  
                        set(visible,true);
                        );
                    );
            );
            );
    </action>

    <action name="skin_hotspotstyle_click" scope="local">
        jscall(calc('krpano.hooks.clickHotspot("' + caller.linkedscene + '")'));
    </action>

    
    <action name="hotspot_tip">
        txtadd(tooltipname, 'vrtooltip_', get(name));
        addhotspot(get(tooltipname)); 
        set(hotspot[get(tooltipname)].type,text);
        copy(hotspot[get(tooltipname)].edge,hotspot[get(name)].edge);
        copy(hotspot[get(tooltipname)].distorted,hotspot[get(name)].distorted);
        copy(hotspot[get(tooltipname)].ath,hotspot[get(name)].ath);
        copy(hotspot[get(tooltipname)].atv,hotspot[get(name)].atv);
        set(hotspot[get(tooltipname)].oy,-30);
        set(hotspot[get(tooltipname)].ox,0);
        set(hotspot[get(tooltipname)].vcenter,true);
        set(hotspot[get(tooltipname)].padding,3);
        set(hotspot[get(tooltipname)].bg,true);
        set(hotspot[get(tooltipname)].bgcolor,0x000000);
        set(hotspot[get(tooltipname)].bgroundedge,5);
        set(hotspot[get(tooltipname)].bgalpha,0.65);
        set(hotspot[get(tooltipname)].bgborder,0);
        set(hotspot[get(tooltipname)].bgshadow,'0 0 0 0x000000 0');
        set(hotspot[get(tooltipname)].css,'text-align:left;font-weight:100; color:#FFFFFF; font-family:MicrosoftYahei; font-size:18px;');
        if(device.mobile,set(hotspot[get(tooltipname)].css,'text-align:center; color:#FFFFFF; font-family:MicrosoftYahei; font-weight:100; font-size:18px;');
        );
        set(hotspot[get(tooltipname)].txtshadow,'0 0 0 0x000000 0');
        if(text == '' OR text === null,
            copy(hotspot[get(tooltipname)].html,scene[get(linkedscene)].title),
            copy(hotspot[get(tooltipname)].html,text);
        ); 
        set(hotspot[get(tooltipname)].enabled,false); 
        if(lp_running == false,
            set(hotspot[get(tooltipname)].visible,true); 
            , 	
            if(!webvr.isenabled,
            if(lp_running == true,
                set(hotspot[get(tooltipname)].visible,false); 
                set(hotspot[get(tooltipname)].mark2,true);
            );
            );
            );
        if(hotspot[get(name)].normal == false, 
            set(hotspot[get(tooltipname)].normal,false);
            set(hotspot[get(tooltipname)].onloaded,
                if(webvr.isenabled,
                    set(visible,false);
                    ,	
                    if(lp_running == false OR lp_running == null,  
                        set(visible,true);
                        );
                    );
            );
            );
    </action>
    
    

    <!-- hotspot image animation -->
    <action name="do_crop_animation">
        <!-- 为热点注册属性 -->
        registerattribute(xframes, calc((imagewidth / %1) BOR 0));
        registerattribute(yframes, calc((imageheight / %2) BOR 0));
        registerattribute(frames, calc(xframes * yframes));
        registerattribute(frame, 0);

        set(crop, '0|0|%1|%2');

        setinterval(calc('crop_anim_' + name), calc(1.0 / %3),
        if(loaded,
        inc(frame);
        if(frame GE frames, if(onlastframe !== null, onlastframe() ); set(frame,0); );
        mod(xpos, frame, xframes);
        div(ypos, frame, xframes);
        Math.floor(ypos);
        mul(xpos, %1);
        mul(ypos, %2);
        calc(crop, xpos + '|' + ypos + '|%1|%2');
        ,
        clearinterval(calc('crop_anim_' + name));
        );
        );
    </action>

    <!--screen change-->
    <events name="player_listener" keep="true" onnewscene="on_scene_loaded()"/>
    <action name="on_scene_loaded">
        jscall(calc('krpano.hooks.sceneChanged("' + scene[get(xml.scene)].name + '")'));
    </action>

    <!--toggle fullscreen-->
    <events onclick="toggle_fullscreen()"/>
    
    <action name="toggle_fullscreen">
        jscall(calc('krpano.hooks.toggleFullscreen()'));
    </action>
    

    <!--onxmlcomplete event-->
     <events onxmlcomplete="onxmlcomplete"/>

    <action name="onxmlcomplete">
        jscall(calc('krpano.hooks.onxmlcomplete();'));
    </action>
     

    <!--resize event-->
    <events onresize="resized"/>
    <action name="resized">
        updatescreen();
        jscall(calc('krpano.hooks.viewerResized();'));
    </action>

    <!--custom hotspot-->
    <action name="on_hotspot_clicked">
        def(hotspot_name, string, %1);
        def(data_name, string, calc('data_hs_' + hotspot_name));
        if(data[get(data_name)],
        jscall(calc('krpano.hooks.hotSpotClicked("'+ hotspot_name +'","' + data[get(data_name)].content + '")'));
        );

    </action>

    <!--gyro-->
    <plugin name="gyro" devices="html5" keep="true"
            url="gyro2.js" enabled="false" camroll="true"/>
</krpano>